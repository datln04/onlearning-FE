/**
 * FPT SE OnLearn management API
 * FPT OnLearn Management API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PaymentHistoryRequestPaymentHistoryView model module.
 * @module model/PaymentHistoryRequestPaymentHistoryView
 * @version v1
 */
class PaymentHistoryRequestPaymentHistoryView {
    /**
     * Constructs a new <code>PaymentHistoryRequestPaymentHistoryView</code>.
     * @alias module:model/PaymentHistoryRequestPaymentHistoryView
     */
    constructor() { 
        
        PaymentHistoryRequestPaymentHistoryView.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PaymentHistoryRequestPaymentHistoryView</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaymentHistoryRequestPaymentHistoryView} obj Optional instance to populate.
     * @return {module:model/PaymentHistoryRequestPaymentHistoryView} The populated <code>PaymentHistoryRequestPaymentHistoryView</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaymentHistoryRequestPaymentHistoryView();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('paymentMethod')) {
                obj['paymentMethod'] = ApiClient.convertToType(data['paymentMethod'], 'String');
            }
            if (data.hasOwnProperty('transactionDate')) {
                obj['transactionDate'] = ApiClient.convertToType(data['transactionDate'], 'String');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('paymentHistoryStatus')) {
                obj['paymentHistoryStatus'] = ApiClient.convertToType(data['paymentHistoryStatus'], 'String');
            }
            if (data.hasOwnProperty('paymentHistoryType')) {
                obj['paymentHistoryType'] = ApiClient.convertToType(data['paymentHistoryType'], 'String');
            }
            if (data.hasOwnProperty('cardDetails')) {
                obj['cardDetails'] = ApiClient.convertToType(data['cardDetails'], 'String');
            }
            if (data.hasOwnProperty('bankInformation')) {
                obj['bankInformation'] = ApiClient.convertToType(data['bankInformation'], 'String');
            }
            if (data.hasOwnProperty('walletId')) {
                obj['walletId'] = ApiClient.convertToType(data['walletId'], 'Number');
            }
            if (data.hasOwnProperty('studentId')) {
                obj['studentId'] = ApiClient.convertToType(data['studentId'], 'Number');
            }
            if (data.hasOwnProperty('teacherId')) {
                obj['teacherId'] = ApiClient.convertToType(data['teacherId'], 'Number');
            }
            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PaymentHistoryRequestPaymentHistoryView</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PaymentHistoryRequestPaymentHistoryView</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['paymentMethod'] && !(typeof data['paymentMethod'] === 'string' || data['paymentMethod'] instanceof String)) {
            throw new Error("Expected the field `paymentMethod` to be a primitive type in the JSON string but got " + data['paymentMethod']);
        }
        // ensure the json data is a string
        if (data['transactionDate'] && !(typeof data['transactionDate'] === 'string' || data['transactionDate'] instanceof String)) {
            throw new Error("Expected the field `transactionDate` to be a primitive type in the JSON string but got " + data['transactionDate']);
        }
        // ensure the json data is a string
        if (data['paymentHistoryStatus'] && !(typeof data['paymentHistoryStatus'] === 'string' || data['paymentHistoryStatus'] instanceof String)) {
            throw new Error("Expected the field `paymentHistoryStatus` to be a primitive type in the JSON string but got " + data['paymentHistoryStatus']);
        }
        // ensure the json data is a string
        if (data['paymentHistoryType'] && !(typeof data['paymentHistoryType'] === 'string' || data['paymentHistoryType'] instanceof String)) {
            throw new Error("Expected the field `paymentHistoryType` to be a primitive type in the JSON string but got " + data['paymentHistoryType']);
        }
        // ensure the json data is a string
        if (data['cardDetails'] && !(typeof data['cardDetails'] === 'string' || data['cardDetails'] instanceof String)) {
            throw new Error("Expected the field `cardDetails` to be a primitive type in the JSON string but got " + data['cardDetails']);
        }
        // ensure the json data is a string
        if (data['bankInformation'] && !(typeof data['bankInformation'] === 'string' || data['bankInformation'] instanceof String)) {
            throw new Error("Expected the field `bankInformation` to be a primitive type in the JSON string but got " + data['bankInformation']);
        }

        return true;
    }


}



/**
 * @member {Number} id
 */
PaymentHistoryRequestPaymentHistoryView.prototype['id'] = undefined;

/**
 * @member {String} paymentMethod
 */
PaymentHistoryRequestPaymentHistoryView.prototype['paymentMethod'] = undefined;

/**
 * @member {String} transactionDate
 */
PaymentHistoryRequestPaymentHistoryView.prototype['transactionDate'] = undefined;

/**
 * @member {Number} amount
 */
PaymentHistoryRequestPaymentHistoryView.prototype['amount'] = undefined;

/**
 * SUCCESS or FAIL
 * @member {String} paymentHistoryStatus
 */
PaymentHistoryRequestPaymentHistoryView.prototype['paymentHistoryStatus'] = undefined;

/**
 * DEPOSIT or WITHDRAW
 * @member {String} paymentHistoryType
 */
PaymentHistoryRequestPaymentHistoryView.prototype['paymentHistoryType'] = undefined;

/**
 * @member {String} cardDetails
 */
PaymentHistoryRequestPaymentHistoryView.prototype['cardDetails'] = undefined;

/**
 * @member {String} bankInformation
 */
PaymentHistoryRequestPaymentHistoryView.prototype['bankInformation'] = undefined;

/**
 * @member {Number} walletId
 */
PaymentHistoryRequestPaymentHistoryView.prototype['walletId'] = undefined;

/**
 * @member {Number} studentId
 */
PaymentHistoryRequestPaymentHistoryView.prototype['studentId'] = undefined;

/**
 * @member {Number} teacherId
 */
PaymentHistoryRequestPaymentHistoryView.prototype['teacherId'] = undefined;

/**
 * @member {Number} accountId
 */
PaymentHistoryRequestPaymentHistoryView.prototype['accountId'] = undefined;






export default PaymentHistoryRequestPaymentHistoryView;

