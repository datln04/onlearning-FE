/**
 * FPT SE OnLearn management API
 * FPT OnLearn Management API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FirebaseMessagingException from './FirebaseMessagingException';

/**
 * The SendResponse model module.
 * @module model/SendResponse
 * @version v1
 */
class SendResponse {
    /**
     * Constructs a new <code>SendResponse</code>.
     * @alias module:model/SendResponse
     */
    constructor() { 
        
        SendResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SendResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SendResponse} obj Optional instance to populate.
     * @return {module:model/SendResponse} The populated <code>SendResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SendResponse();

            if (data.hasOwnProperty('messageId')) {
                obj['messageId'] = ApiClient.convertToType(data['messageId'], 'String');
            }
            if (data.hasOwnProperty('exception')) {
                obj['exception'] = FirebaseMessagingException.constructFromObject(data['exception']);
            }
            if (data.hasOwnProperty('successful')) {
                obj['successful'] = ApiClient.convertToType(data['successful'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SendResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SendResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['messageId'] && !(typeof data['messageId'] === 'string' || data['messageId'] instanceof String)) {
            throw new Error("Expected the field `messageId` to be a primitive type in the JSON string but got " + data['messageId']);
        }
        // validate the optional field `exception`
        if (data['exception']) { // data not null
          FirebaseMessagingException.validateJSON(data['exception']);
        }

        return true;
    }


}



/**
 * @member {String} messageId
 */
SendResponse.prototype['messageId'] = undefined;

/**
 * @member {module:model/FirebaseMessagingException} exception
 */
SendResponse.prototype['exception'] = undefined;

/**
 * @member {Boolean} successful
 */
SendResponse.prototype['successful'] = undefined;






export default SendResponse;

