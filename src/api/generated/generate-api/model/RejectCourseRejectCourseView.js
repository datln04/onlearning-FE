/**
 * FPT SE OnLearn management API
 * FPT OnLearn Management API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CourseRejectCourseView from './CourseRejectCourseView';

/**
 * The RejectCourseRejectCourseView model module.
 * @module model/RejectCourseRejectCourseView
 * @version v1
 */
class RejectCourseRejectCourseView {
    /**
     * Constructs a new <code>RejectCourseRejectCourseView</code>.
     * @alias module:model/RejectCourseRejectCourseView
     */
    constructor() { 
        
        RejectCourseRejectCourseView.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RejectCourseRejectCourseView</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RejectCourseRejectCourseView} obj Optional instance to populate.
     * @return {module:model/RejectCourseRejectCourseView} The populated <code>RejectCourseRejectCourseView</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RejectCourseRejectCourseView();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
            }
            if (data.hasOwnProperty('dateReject')) {
                obj['dateReject'] = ApiClient.convertToType(data['dateReject'], 'Date');
            }
            if (data.hasOwnProperty('course')) {
                obj['course'] = CourseRejectCourseView.constructFromObject(data['course']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RejectCourseRejectCourseView</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RejectCourseRejectCourseView</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['reason'] && !(typeof data['reason'] === 'string' || data['reason'] instanceof String)) {
            throw new Error("Expected the field `reason` to be a primitive type in the JSON string but got " + data['reason']);
        }
        // validate the optional field `course`
        if (data['course']) { // data not null
          CourseRejectCourseView.validateJSON(data['course']);
        }

        return true;
    }


}



/**
 * @member {Number} id
 */
RejectCourseRejectCourseView.prototype['id'] = undefined;

/**
 * @member {String} reason
 */
RejectCourseRejectCourseView.prototype['reason'] = undefined;

/**
 * @member {Date} dateReject
 */
RejectCourseRejectCourseView.prototype['dateReject'] = undefined;

/**
 * @member {module:model/CourseRejectCourseView} course
 */
RejectCourseRejectCourseView.prototype['course'] = undefined;






export default RejectCourseRejectCourseView;

