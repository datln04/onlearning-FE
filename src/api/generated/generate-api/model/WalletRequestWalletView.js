/**
 * FPT SE OnLearn management API
 * FPT OnLearn Management API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WalletRequestWalletView model module.
 * @module model/WalletRequestWalletView
 * @version v1
 */
class WalletRequestWalletView {
    /**
     * Constructs a new <code>WalletRequestWalletView</code>.
     * @alias module:model/WalletRequestWalletView
     */
    constructor() { 
        
        WalletRequestWalletView.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WalletRequestWalletView</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WalletRequestWalletView} obj Optional instance to populate.
     * @return {module:model/WalletRequestWalletView} The populated <code>WalletRequestWalletView</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WalletRequestWalletView();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('bankNumber')) {
                obj['bankNumber'] = ApiClient.convertToType(data['bankNumber'], 'String');
            }
            if (data.hasOwnProperty('bankName')) {
                obj['bankName'] = ApiClient.convertToType(data['bankName'], 'String');
            }
            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'Number');
            }
            if (data.hasOwnProperty('walletType')) {
                obj['walletType'] = ApiClient.convertToType(data['walletType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WalletRequestWalletView</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WalletRequestWalletView</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['bankNumber'] && !(typeof data['bankNumber'] === 'string' || data['bankNumber'] instanceof String)) {
            throw new Error("Expected the field `bankNumber` to be a primitive type in the JSON string but got " + data['bankNumber']);
        }
        // ensure the json data is a string
        if (data['bankName'] && !(typeof data['bankName'] === 'string' || data['bankName'] instanceof String)) {
            throw new Error("Expected the field `bankName` to be a primitive type in the JSON string but got " + data['bankName']);
        }
        // ensure the json data is a string
        if (data['walletType'] && !(typeof data['walletType'] === 'string' || data['walletType'] instanceof String)) {
            throw new Error("Expected the field `walletType` to be a primitive type in the JSON string but got " + data['walletType']);
        }

        return true;
    }


}



/**
 * @member {Number} id
 */
WalletRequestWalletView.prototype['id'] = undefined;

/**
 * @member {Number} amount
 */
WalletRequestWalletView.prototype['amount'] = undefined;

/**
 * @member {String} bankNumber
 */
WalletRequestWalletView.prototype['bankNumber'] = undefined;

/**
 * @member {String} bankName
 */
WalletRequestWalletView.prototype['bankName'] = undefined;

/**
 * @member {Number} accountId
 */
WalletRequestWalletView.prototype['accountId'] = undefined;

/**
 * Type is STUDENT or TEACHER
 * @member {String} walletType
 */
WalletRequestWalletView.prototype['walletType'] = undefined;






export default WalletRequestWalletView;

