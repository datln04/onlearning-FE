/**
 * FPT SE OnLearn management API
 * FPT OnLearn Management API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TeacherEnrollView from './TeacherEnrollView';
import TransactionEnrollView from './TransactionEnrollView';

/**
 * The WithdrawalRequestEnrollView model module.
 * @module model/WithdrawalRequestEnrollView
 * @version v1
 */
class WithdrawalRequestEnrollView {
    /**
     * Constructs a new <code>WithdrawalRequestEnrollView</code>.
     * @alias module:model/WithdrawalRequestEnrollView
     */
    constructor() { 
        
        WithdrawalRequestEnrollView.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WithdrawalRequestEnrollView</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WithdrawalRequestEnrollView} obj Optional instance to populate.
     * @return {module:model/WithdrawalRequestEnrollView} The populated <code>WithdrawalRequestEnrollView</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WithdrawalRequestEnrollView();

            if (data.hasOwnProperty('withdrawalAmount')) {
                obj['withdrawalAmount'] = ApiClient.convertToType(data['withdrawalAmount'], 'Number');
            }
            if (data.hasOwnProperty('requestDate')) {
                obj['requestDate'] = ApiClient.convertToType(data['requestDate'], 'Date');
            }
            if (data.hasOwnProperty('withdrawalRequestStatus')) {
                obj['withdrawalRequestStatus'] = ApiClient.convertToType(data['withdrawalRequestStatus'], 'String');
            }
            if (data.hasOwnProperty('requestComments')) {
                obj['requestComments'] = ApiClient.convertToType(data['requestComments'], 'String');
            }
            if (data.hasOwnProperty('teacher')) {
                obj['teacher'] = TeacherEnrollView.constructFromObject(data['teacher']);
            }
            if (data.hasOwnProperty('transactions')) {
                obj['transactions'] = ApiClient.convertToType(data['transactions'], [TransactionEnrollView]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WithdrawalRequestEnrollView</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WithdrawalRequestEnrollView</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['withdrawalRequestStatus'] && !(typeof data['withdrawalRequestStatus'] === 'string' || data['withdrawalRequestStatus'] instanceof String)) {
            throw new Error("Expected the field `withdrawalRequestStatus` to be a primitive type in the JSON string but got " + data['withdrawalRequestStatus']);
        }
        // ensure the json data is a string
        if (data['requestComments'] && !(typeof data['requestComments'] === 'string' || data['requestComments'] instanceof String)) {
            throw new Error("Expected the field `requestComments` to be a primitive type in the JSON string but got " + data['requestComments']);
        }
        // validate the optional field `teacher`
        if (data['teacher']) { // data not null
          TeacherEnrollView.validateJSON(data['teacher']);
        }
        if (data['transactions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['transactions'])) {
                throw new Error("Expected the field `transactions` to be an array in the JSON data but got " + data['transactions']);
            }
            // validate the optional field `transactions` (array)
            for (const item of data['transactions']) {
                TransactionEnrollView.validateJsonObject(item);
            };
        }

        return true;
    }


}



/**
 * @member {Number} withdrawalAmount
 */
WithdrawalRequestEnrollView.prototype['withdrawalAmount'] = undefined;

/**
 * @member {Date} requestDate
 */
WithdrawalRequestEnrollView.prototype['requestDate'] = undefined;

/**
 * @member {module:model/WithdrawalRequestEnrollView.WithdrawalRequestStatusEnum} withdrawalRequestStatus
 */
WithdrawalRequestEnrollView.prototype['withdrawalRequestStatus'] = undefined;

/**
 * @member {String} requestComments
 */
WithdrawalRequestEnrollView.prototype['requestComments'] = undefined;

/**
 * @member {module:model/TeacherEnrollView} teacher
 */
WithdrawalRequestEnrollView.prototype['teacher'] = undefined;

/**
 * @member {Array.<module:model/TransactionEnrollView>} transactions
 */
WithdrawalRequestEnrollView.prototype['transactions'] = undefined;





/**
 * Allowed values for the <code>withdrawalRequestStatus</code> property.
 * @enum {String}
 * @readonly
 */
WithdrawalRequestEnrollView['WithdrawalRequestStatusEnum'] = {

    /**
     * value: "PENDING"
     * @const
     */
    "PENDING": "PENDING",

    /**
     * value: "SUCCESS"
     * @const
     */
    "SUCCESS": "SUCCESS",

    /**
     * value: "REJECT"
     * @const
     */
    "REJECT": "REJECT"
};



export default WithdrawalRequestEnrollView;

