/**
 * FPT SE OnLearn management API
 * FPT OnLearn Management API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AccountWithdrawRequestView from './AccountWithdrawRequestView';
import TeacherWithdrawRequestView from './TeacherWithdrawRequestView';
import WalletWithdrawRequestView from './WalletWithdrawRequestView';

/**
 * The PaymentHistoryWithdrawRequestView model module.
 * @module model/PaymentHistoryWithdrawRequestView
 * @version v1
 */
class PaymentHistoryWithdrawRequestView {
    /**
     * Constructs a new <code>PaymentHistoryWithdrawRequestView</code>.
     * @alias module:model/PaymentHistoryWithdrawRequestView
     */
    constructor() { 
        
        PaymentHistoryWithdrawRequestView.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PaymentHistoryWithdrawRequestView</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaymentHistoryWithdrawRequestView} obj Optional instance to populate.
     * @return {module:model/PaymentHistoryWithdrawRequestView} The populated <code>PaymentHistoryWithdrawRequestView</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaymentHistoryWithdrawRequestView();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('paymentMethod')) {
                obj['paymentMethod'] = ApiClient.convertToType(data['paymentMethod'], 'String');
            }
            if (data.hasOwnProperty('transactionDate')) {
                obj['transactionDate'] = ApiClient.convertToType(data['transactionDate'], 'Date');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('paymentHistoryStatus')) {
                obj['paymentHistoryStatus'] = ApiClient.convertToType(data['paymentHistoryStatus'], 'String');
            }
            if (data.hasOwnProperty('paymentHistoryType')) {
                obj['paymentHistoryType'] = ApiClient.convertToType(data['paymentHistoryType'], 'String');
            }
            if (data.hasOwnProperty('cardDetails')) {
                obj['cardDetails'] = ApiClient.convertToType(data['cardDetails'], 'String');
            }
            if (data.hasOwnProperty('bankInformation')) {
                obj['bankInformation'] = ApiClient.convertToType(data['bankInformation'], 'String');
            }
            if (data.hasOwnProperty('orderId')) {
                obj['orderId'] = ApiClient.convertToType(data['orderId'], 'String');
            }
            if (data.hasOwnProperty('captureId')) {
                obj['captureId'] = ApiClient.convertToType(data['captureId'], 'String');
            }
            if (data.hasOwnProperty('payoutBatchId')) {
                obj['payoutBatchId'] = ApiClient.convertToType(data['payoutBatchId'], 'String');
            }
            if (data.hasOwnProperty('payoutBatchItemId')) {
                obj['payoutBatchItemId'] = ApiClient.convertToType(data['payoutBatchItemId'], 'String');
            }
            if (data.hasOwnProperty('wallet')) {
                obj['wallet'] = WalletWithdrawRequestView.constructFromObject(data['wallet']);
            }
            if (data.hasOwnProperty('student')) {
                obj['student'] = ApiClient.convertToType(data['student'], Object);
            }
            if (data.hasOwnProperty('teacher')) {
                obj['teacher'] = TeacherWithdrawRequestView.constructFromObject(data['teacher']);
            }
            if (data.hasOwnProperty('account')) {
                obj['account'] = AccountWithdrawRequestView.constructFromObject(data['account']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PaymentHistoryWithdrawRequestView</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PaymentHistoryWithdrawRequestView</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['paymentMethod'] && !(typeof data['paymentMethod'] === 'string' || data['paymentMethod'] instanceof String)) {
            throw new Error("Expected the field `paymentMethod` to be a primitive type in the JSON string but got " + data['paymentMethod']);
        }
        // ensure the json data is a string
        if (data['paymentHistoryStatus'] && !(typeof data['paymentHistoryStatus'] === 'string' || data['paymentHistoryStatus'] instanceof String)) {
            throw new Error("Expected the field `paymentHistoryStatus` to be a primitive type in the JSON string but got " + data['paymentHistoryStatus']);
        }
        // ensure the json data is a string
        if (data['paymentHistoryType'] && !(typeof data['paymentHistoryType'] === 'string' || data['paymentHistoryType'] instanceof String)) {
            throw new Error("Expected the field `paymentHistoryType` to be a primitive type in the JSON string but got " + data['paymentHistoryType']);
        }
        // ensure the json data is a string
        if (data['cardDetails'] && !(typeof data['cardDetails'] === 'string' || data['cardDetails'] instanceof String)) {
            throw new Error("Expected the field `cardDetails` to be a primitive type in the JSON string but got " + data['cardDetails']);
        }
        // ensure the json data is a string
        if (data['bankInformation'] && !(typeof data['bankInformation'] === 'string' || data['bankInformation'] instanceof String)) {
            throw new Error("Expected the field `bankInformation` to be a primitive type in the JSON string but got " + data['bankInformation']);
        }
        // ensure the json data is a string
        if (data['orderId'] && !(typeof data['orderId'] === 'string' || data['orderId'] instanceof String)) {
            throw new Error("Expected the field `orderId` to be a primitive type in the JSON string but got " + data['orderId']);
        }
        // ensure the json data is a string
        if (data['captureId'] && !(typeof data['captureId'] === 'string' || data['captureId'] instanceof String)) {
            throw new Error("Expected the field `captureId` to be a primitive type in the JSON string but got " + data['captureId']);
        }
        // ensure the json data is a string
        if (data['payoutBatchId'] && !(typeof data['payoutBatchId'] === 'string' || data['payoutBatchId'] instanceof String)) {
            throw new Error("Expected the field `payoutBatchId` to be a primitive type in the JSON string but got " + data['payoutBatchId']);
        }
        // ensure the json data is a string
        if (data['payoutBatchItemId'] && !(typeof data['payoutBatchItemId'] === 'string' || data['payoutBatchItemId'] instanceof String)) {
            throw new Error("Expected the field `payoutBatchItemId` to be a primitive type in the JSON string but got " + data['payoutBatchItemId']);
        }
        // validate the optional field `wallet`
        if (data['wallet']) { // data not null
          WalletWithdrawRequestView.validateJSON(data['wallet']);
        }
        // validate the optional field `teacher`
        if (data['teacher']) { // data not null
          TeacherWithdrawRequestView.validateJSON(data['teacher']);
        }
        // validate the optional field `account`
        if (data['account']) { // data not null
          AccountWithdrawRequestView.validateJSON(data['account']);
        }

        return true;
    }


}



/**
 * @member {Number} id
 */
PaymentHistoryWithdrawRequestView.prototype['id'] = undefined;

/**
 * @member {String} paymentMethod
 */
PaymentHistoryWithdrawRequestView.prototype['paymentMethod'] = undefined;

/**
 * @member {Date} transactionDate
 */
PaymentHistoryWithdrawRequestView.prototype['transactionDate'] = undefined;

/**
 * @member {Number} amount
 */
PaymentHistoryWithdrawRequestView.prototype['amount'] = undefined;

/**
 * @member {module:model/PaymentHistoryWithdrawRequestView.PaymentHistoryStatusEnum} paymentHistoryStatus
 */
PaymentHistoryWithdrawRequestView.prototype['paymentHistoryStatus'] = undefined;

/**
 * @member {module:model/PaymentHistoryWithdrawRequestView.PaymentHistoryTypeEnum} paymentHistoryType
 */
PaymentHistoryWithdrawRequestView.prototype['paymentHistoryType'] = undefined;

/**
 * @member {String} cardDetails
 */
PaymentHistoryWithdrawRequestView.prototype['cardDetails'] = undefined;

/**
 * @member {String} bankInformation
 */
PaymentHistoryWithdrawRequestView.prototype['bankInformation'] = undefined;

/**
 * @member {String} orderId
 */
PaymentHistoryWithdrawRequestView.prototype['orderId'] = undefined;

/**
 * @member {String} captureId
 */
PaymentHistoryWithdrawRequestView.prototype['captureId'] = undefined;

/**
 * @member {String} payoutBatchId
 */
PaymentHistoryWithdrawRequestView.prototype['payoutBatchId'] = undefined;

/**
 * @member {String} payoutBatchItemId
 */
PaymentHistoryWithdrawRequestView.prototype['payoutBatchItemId'] = undefined;

/**
 * @member {module:model/WalletWithdrawRequestView} wallet
 */
PaymentHistoryWithdrawRequestView.prototype['wallet'] = undefined;

/**
 * @member {Object} student
 */
PaymentHistoryWithdrawRequestView.prototype['student'] = undefined;

/**
 * @member {module:model/TeacherWithdrawRequestView} teacher
 */
PaymentHistoryWithdrawRequestView.prototype['teacher'] = undefined;

/**
 * @member {module:model/AccountWithdrawRequestView} account
 */
PaymentHistoryWithdrawRequestView.prototype['account'] = undefined;





/**
 * Allowed values for the <code>paymentHistoryStatus</code> property.
 * @enum {String}
 * @readonly
 */
PaymentHistoryWithdrawRequestView['PaymentHistoryStatusEnum'] = {

    /**
     * value: "CREATED"
     * @const
     */
    "CREATED": "CREATED",

    /**
     * value: "COMPLETED"
     * @const
     */
    "COMPLETED": "COMPLETED",

    /**
     * value: "REFUNDED"
     * @const
     */
    "REFUNDED": "REFUNDED",

    /**
     * value: "PENDING"
     * @const
     */
    "PENDING": "PENDING",

    /**
     * value: "PENDING_PAYOUT"
     * @const
     */
    "PENDING_PAYOUT": "PENDING_PAYOUT",

    /**
     * value: "COMPLETED_PAYOUT"
     * @const
     */
    "COMPLETED_PAYOUT": "COMPLETED_PAYOUT",

    /**
     * value: "PAYOUT"
     * @const
     */
    "PAYOUT": "PAYOUT",

    /**
     * value: "CANCEL"
     * @const
     */
    "CANCEL": "CANCEL"
};


/**
 * Allowed values for the <code>paymentHistoryType</code> property.
 * @enum {String}
 * @readonly
 */
PaymentHistoryWithdrawRequestView['PaymentHistoryTypeEnum'] = {

    /**
     * value: "DEPOSIT"
     * @const
     */
    "DEPOSIT": "DEPOSIT",

    /**
     * value: "WITHDRAW"
     * @const
     */
    "WITHDRAW": "WITHDRAW"
};



export default PaymentHistoryWithdrawRequestView;

