/**
 * FPT SE OnLearn management API
 * FPT OnLearn Management API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FeedContentFeedbackView from './FeedContentFeedbackView';
import FeedbackFeedbackView from './FeedbackFeedbackView';

/**
 * The FeedbackDetailFeedbackView model module.
 * @module model/FeedbackDetailFeedbackView
 * @version v1
 */
class FeedbackDetailFeedbackView {
    /**
     * Constructs a new <code>FeedbackDetailFeedbackView</code>.
     * @alias module:model/FeedbackDetailFeedbackView
     */
    constructor() { 
        
        FeedbackDetailFeedbackView.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FeedbackDetailFeedbackView</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FeedbackDetailFeedbackView} obj Optional instance to populate.
     * @return {module:model/FeedbackDetailFeedbackView} The populated <code>FeedbackDetailFeedbackView</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FeedbackDetailFeedbackView();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('feedback')) {
                obj['feedback'] = FeedbackFeedbackView.constructFromObject(data['feedback']);
            }
            if (data.hasOwnProperty('feedContent')) {
                obj['feedContent'] = FeedContentFeedbackView.constructFromObject(data['feedContent']);
            }
            if (data.hasOwnProperty('rate')) {
                obj['rate'] = ApiClient.convertToType(data['rate'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FeedbackDetailFeedbackView</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FeedbackDetailFeedbackView</code>.
     */
    static validateJSON(data) {
        // validate the optional field `feedback`
        if (data['feedback']) { // data not null
          FeedbackFeedbackView.validateJSON(data['feedback']);
        }
        // validate the optional field `feedContent`
        if (data['feedContent']) { // data not null
          FeedContentFeedbackView.validateJSON(data['feedContent']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['text'] && !(typeof data['text'] === 'string' || data['text'] instanceof String)) {
            throw new Error("Expected the field `text` to be a primitive type in the JSON string but got " + data['text']);
        }

        return true;
    }


}



/**
 * @member {Number} id
 */
FeedbackDetailFeedbackView.prototype['id'] = undefined;

/**
 * @member {module:model/FeedbackFeedbackView} feedback
 */
FeedbackDetailFeedbackView.prototype['feedback'] = undefined;

/**
 * @member {module:model/FeedContentFeedbackView} feedContent
 */
FeedbackDetailFeedbackView.prototype['feedContent'] = undefined;

/**
 * @member {Number} rate
 */
FeedbackDetailFeedbackView.prototype['rate'] = undefined;

/**
 * @member {String} type
 */
FeedbackDetailFeedbackView.prototype['type'] = undefined;

/**
 * @member {String} text
 */
FeedbackDetailFeedbackView.prototype['text'] = undefined;






export default FeedbackDetailFeedbackView;

