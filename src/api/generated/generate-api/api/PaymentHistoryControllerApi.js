/**
 * FPT SE OnLearn management API
 * FPT OnLearn Management API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import PaymentHistoryFilterPaymentHistoryView from '../model/PaymentHistoryFilterPaymentHistoryView';
import PaymentHistoryPaymentHistoryView from '../model/PaymentHistoryPaymentHistoryView';
import PaymentHistoryRequestPaymentHistoryView from '../model/PaymentHistoryRequestPaymentHistoryView';

/**
* PaymentHistoryController service.
* @module api/PaymentHistoryControllerApi
* @version v1
*/
export default class PaymentHistoryControllerApi {

    /**
    * Constructs a new PaymentHistoryControllerApi. 
    * @alias module:api/PaymentHistoryControllerApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getPaymentHistories operation.
     * @callback module:api/PaymentHistoryControllerApi~getPaymentHistoriesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/PaymentHistoryPaymentHistoryView>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/PaymentHistoryControllerApi~getPaymentHistoriesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/PaymentHistoryPaymentHistoryView>}
     */
    getPaymentHistories(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [PaymentHistoryPaymentHistoryView];
      return this.apiClient.callApi(
        '/api/v1/payment_history/histories', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPaymentHistoryById operation.
     * @callback module:api/PaymentHistoryControllerApi~getPaymentHistoryByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaymentHistoryPaymentHistoryView} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} historyId 
     * @param {module:api/PaymentHistoryControllerApi~getPaymentHistoryByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaymentHistoryPaymentHistoryView}
     */
    getPaymentHistoryById(historyId, callback) {
      let postBody = null;
      // verify the required parameter 'historyId' is set
      if (historyId === undefined || historyId === null) {
        throw new Error("Missing the required parameter 'historyId' when calling getPaymentHistoryById");
      }

      let pathParams = {
      };
      let queryParams = {
        'history_id': historyId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = PaymentHistoryPaymentHistoryView;
      return this.apiClient.callApi(
        '/api/v1/payment_history/by-id', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPaymentHistoryByStudent operation.
     * @callback module:api/PaymentHistoryControllerApi~getPaymentHistoryByStudentCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/PaymentHistoryPaymentHistoryView>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} opts.studentId 
     * @param {Date} opts.startDate 
     * @param {Date} opts.endDate 
     * @param {module:api/PaymentHistoryControllerApi~getPaymentHistoryByStudentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/PaymentHistoryPaymentHistoryView>}
     */
    getPaymentHistoryByStudent(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'studentId': opts['studentId'],
        'startDate': opts['startDate'],
        'endDate': opts['endDate']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [PaymentHistoryPaymentHistoryView];
      return this.apiClient.callApi(
        '/api/v1/payment_history/by-student', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPaymentHistoryByStudentWithFilter operation.
     * @callback module:api/PaymentHistoryControllerApi~getPaymentHistoryByStudentWithFilterCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/PaymentHistoryPaymentHistoryView>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/PaymentHistoryFilterPaymentHistoryView} paymentHistoryFilterPaymentHistoryView 
     * @param {module:api/PaymentHistoryControllerApi~getPaymentHistoryByStudentWithFilterCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/PaymentHistoryPaymentHistoryView>}
     */
    getPaymentHistoryByStudentWithFilter(paymentHistoryFilterPaymentHistoryView, callback) {
      let postBody = paymentHistoryFilterPaymentHistoryView;
      // verify the required parameter 'paymentHistoryFilterPaymentHistoryView' is set
      if (paymentHistoryFilterPaymentHistoryView === undefined || paymentHistoryFilterPaymentHistoryView === null) {
        throw new Error("Missing the required parameter 'paymentHistoryFilterPaymentHistoryView' when calling getPaymentHistoryByStudentWithFilter");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = [PaymentHistoryPaymentHistoryView];
      return this.apiClient.callApi(
        '/api/v1/payment_history/by-student-filter', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPaymentHistoryByTeacher operation.
     * @callback module:api/PaymentHistoryControllerApi~getPaymentHistoryByTeacherCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/PaymentHistoryPaymentHistoryView>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} opts.teacherId 
     * @param {Date} opts.startDate 
     * @param {Date} opts.endDate 
     * @param {module:api/PaymentHistoryControllerApi~getPaymentHistoryByTeacherCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/PaymentHistoryPaymentHistoryView>}
     */
    getPaymentHistoryByTeacher(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'teacherId': opts['teacherId'],
        'startDate': opts['startDate'],
        'endDate': opts['endDate']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [PaymentHistoryPaymentHistoryView];
      return this.apiClient.callApi(
        '/api/v1/payment_history/by-teacher', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPaymentHistoryByWallet operation.
     * @callback module:api/PaymentHistoryControllerApi~getPaymentHistoryByWalletCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/PaymentHistoryPaymentHistoryView>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} walletId 
     * @param {module:api/PaymentHistoryControllerApi~getPaymentHistoryByWalletCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/PaymentHistoryPaymentHistoryView>}
     */
    getPaymentHistoryByWallet(walletId, callback) {
      let postBody = null;
      // verify the required parameter 'walletId' is set
      if (walletId === undefined || walletId === null) {
        throw new Error("Missing the required parameter 'walletId' when calling getPaymentHistoryByWallet");
      }

      let pathParams = {
      };
      let queryParams = {
        'wallet_id': walletId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [PaymentHistoryPaymentHistoryView];
      return this.apiClient.callApi(
        '/api/v1/payment_history/by-wallet', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the savePaymentHistory operation.
     * @callback module:api/PaymentHistoryControllerApi~savePaymentHistoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaymentHistoryPaymentHistoryView} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/PaymentHistoryRequestPaymentHistoryView} paymentHistoryRequestPaymentHistoryView 
     * @param {module:api/PaymentHistoryControllerApi~savePaymentHistoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaymentHistoryPaymentHistoryView}
     */
    savePaymentHistory(paymentHistoryRequestPaymentHistoryView, callback) {
      let postBody = paymentHistoryRequestPaymentHistoryView;
      // verify the required parameter 'paymentHistoryRequestPaymentHistoryView' is set
      if (paymentHistoryRequestPaymentHistoryView === undefined || paymentHistoryRequestPaymentHistoryView === null) {
        throw new Error("Missing the required parameter 'paymentHistoryRequestPaymentHistoryView' when calling savePaymentHistory");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = PaymentHistoryPaymentHistoryView;
      return this.apiClient.callApi(
        '/api/v1/payment_history/save', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
