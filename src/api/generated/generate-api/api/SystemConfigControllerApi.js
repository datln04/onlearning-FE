/**
 * FPT SE OnLearn management API
 * FPT OnLearn Management API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import SystemConfig from '../model/SystemConfig';

/**
* SystemConfigController service.
* @module api/SystemConfigControllerApi
* @version v1
*/
export default class SystemConfigControllerApi {

    /**
    * Constructs a new SystemConfigControllerApi. 
    * @alias module:api/SystemConfigControllerApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getSystemConfigById operation.
     * @callback module:api/SystemConfigControllerApi~getSystemConfigByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SystemConfig} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} systemConfigId 
     * @param {module:api/SystemConfigControllerApi~getSystemConfigByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SystemConfig}
     */
    getSystemConfigById(systemConfigId, callback) {
      let postBody = null;
      // verify the required parameter 'systemConfigId' is set
      if (systemConfigId === undefined || systemConfigId === null) {
        throw new Error("Missing the required parameter 'systemConfigId' when calling getSystemConfigById");
      }

      let pathParams = {
      };
      let queryParams = {
        'system-config-id': systemConfigId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = SystemConfig;
      return this.apiClient.callApi(
        '/api/v1/system-config/by-id', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSystemConfigs operation.
     * @callback module:api/SystemConfigControllerApi~getSystemConfigsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/SystemConfig>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/SystemConfigControllerApi~getSystemConfigsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/SystemConfig>}
     */
    getSystemConfigs(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [SystemConfig];
      return this.apiClient.callApi(
        '/api/v1/system-config/configs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the removeSystemConfig operation.
     * @callback module:api/SystemConfigControllerApi~removeSystemConfigCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} id 
     * @param {module:api/SystemConfigControllerApi~removeSystemConfigCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    removeSystemConfig(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling removeSystemConfig");
      }

      let pathParams = {
      };
      let queryParams = {
        'id': id
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = 'String';
      return this.apiClient.callApi(
        '/api/v1/system-config/remove', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the saveSystemConfig operation.
     * @callback module:api/SystemConfigControllerApi~saveSystemConfigCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SystemConfig} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/SystemConfig} systemConfig 
     * @param {module:api/SystemConfigControllerApi~saveSystemConfigCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SystemConfig}
     */
    saveSystemConfig(systemConfig, callback) {
      let postBody = systemConfig;
      // verify the required parameter 'systemConfig' is set
      if (systemConfig === undefined || systemConfig === null) {
        throw new Error("Missing the required parameter 'systemConfig' when calling saveSystemConfig");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = SystemConfig;
      return this.apiClient.callApi(
        '/api/v1/system-config/save', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
